{
  "openapi": "3.0.3",
  "info": {
    "title": "Meteorological Rain Gauge Data - OpenAPI 3.0",
    "description": "This is a meteorological rain gauge data Server based on the OpenAPI 3.0 specification.",
    "contact": {
      "email": "mt55003@fer.hr"
    },
    "license": {
      "name": "CC0 1.0 Universal",
      "url": "https://creativecommons.org/publicdomain/zero/1.0/"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/data": {
      "get": {
        "tags": [
          "collection"
        ],
        "summary": "Get all data of database",
        "description": "Get all data from database. Including all stations and recordings.",
        "operationId": "getData",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Combine"
                }
              }
            }
          },
          "404": {
            "description": "Data not found"
          }
        }
      }
    },
    "/station/{stationId}": {
      "get": {
        "tags": [
          "station",
          "single"
        ],
        "summary": "Find station by ID",
        "description": "Returns station",
        "operationId": "getStationById",
        "parameters": [
          {
            "name": "stationId",
            "in": "path",
            "description": "ID of station to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "examples": {
              "firstStation": {
                "description": "First station in database",
                "value": 1
              },
              "secondStation": {
                "description": "Second station in database",
                "value": 2
              },
              "thirdStation": {
                "description": "Third station in database",
                "value": 3
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Station"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Station not found"
          }
        }
      },
      "put": {
        "tags": [
          "station",
          "single"
        ],
        "summary": "Update station",
        "description": "Update station data",
        "operationId": "updateStation",
        "parameters": [
          {
            "name": "stationId",
            "in": "path",
            "description": "name that need to be deleted",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Update an existent station in the database",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StationCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid parameters"
          }
        }
      },
      "delete": {
        "tags": [
          "station",
          "single"
        ],
        "summary": "Deletes a station",
        "description": "delete a station",
        "operationId": "deleteStation",
        "parameters": [
          {
            "name": "stationId",
            "in": "path",
            "description": "Station id to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid StationId"
          },
          "404": {
            "description": "StationId not found"
          }
        }
      }
    },
    "/station/{stationId}/recordings": {
      "get": {
        "tags": [
          "station"
        ],
        "summary": "Gets Station Recordings",
        "operationId": "getStationRecordings",
        "parameters": [
          {
            "name": "stationId",
            "in": "path",
            "description": "stationID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Recording"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No stations with such Id found"
          }
        }
      }
    },
    "/station/findByName": {
      "get": {
        "tags": [
          "station"
        ],
        "summary": "Finds Station by name",
        "operationId": "findStationByName",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name that needs to be considered for filter",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Station"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No stations with such name found"
          }
        }
      }
    },
    "/station": {
      "post": {
        "tags": [
          "station",
          "single"
        ],
        "summary": "Add a new station to the database",
        "description": "Add a new station to the database",
        "operationId": "addStation",
        "requestBody": {
          "description": "Create a new station in the database",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StationCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/recordings/getByDay": {
      "get": {
        "tags": [
          "recording"
        ],
        "summary": "Finds Recordings by day of creation",
        "operationId": "findRecordingByDate",
        "parameters": [
          {
            "name": "Date",
            "in": "query",
            "description": "Date that needs to be considered for filter",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Recording"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid or no date supplied"
          },
          "404": {
            "description": "No recordings found at that date"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "StationCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 10
          },
          "name": {
            "type": "string",
            "description": "Name of meteorological station",
            "example": "OPG1"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "elevation": {
            "type": "integer",
            "format": "int32"
          },
          "datesetup": {
            "type": "string",
            "format": "date-time"
          },
          "isactive": {
            "type": "boolean"
          },
          "isautomatic": {
            "type": "boolean"
          }
        }
      },
      "Station": {
        "type": "object",
        "properties": {
          "@context": {
            "type": "string",
            "example": "https://schema.org"
          },
          "@type": {
            "type": "string",
            "example": "Place"
          },
          "identifier": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of meteorological station",
            "example": "OPG1"
          },
          "geo": {
            "type": "object",
            "properties": {
              "@type": {
                "type": "string"
              },
              "latitude": {
                "type": "number",
                "format": "double"
              },
              "longitude": {
                "type": "number",
                "format": "double"
              },
              "elevation": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "additionalProperty": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "boolean"
                    }
                  ]
                }
              }
            },
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        },
        "xml": {
          "name": "station"
        }
      },
      "Recording": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "stationid": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "interval": {
            "type": "string",
            "format": "date-time"
          }
        },
        "xml": {
          "name": "recording"
        }
      },
      "Combine": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 10
          },
          "name": {
            "type": "string",
            "description": "Name of meteorological station",
            "example": "OPG1"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "elevation": {
            "type": "integer",
            "format": "int32"
          },
          "datesetup": {
            "type": "string",
            "format": "date-time"
          },
          "isactive": {
            "type": "boolean"
          },
          "isautomatic": {
            "type": "boolean"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "stationid": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "interval": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}